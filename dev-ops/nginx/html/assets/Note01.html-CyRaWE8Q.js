import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as t,a}from"./app-Ba8YKsSx.js";const e={},l=a(`<h2 id="任务" tabindex="-1"><a class="header-anchor" href="#任务"><span>任务</span></a></h2><ul><li>[x] 环境配置</li><li>[x] 搭建项目结构</li><li>[x] 跑通广播模式 RPC 过程调用</li></ul><h2 id="学习过程" tabindex="-1"><a class="header-anchor" href="#学习过程"><span>学习过程</span></a></h2><ol><li><p>项目整体了解</p><p>通过对第一节文档的阅读，了解整个项目的生命周期、所需要的技术以及代码提交规范</p></li><li><p>搭建项目结构，简单学习DDD架构，理解每个模块的依赖关系和作用</p><figure><img src="https://ossk.cc/file/a1becec060599d420b82d.png" alt="依赖关系图" tabindex="0" loading="lazy"><figcaption>依赖关系图</figcaption></figure><table><thead><tr><th>模块</th><th>作用</th></tr></thead><tbody><tr><td>Lottery</td><td>总项目，用来管理整个项目的依赖</td></tr><tr><td>lottery-application</td><td>应用层，为用户接口层提供各种应用数据展现支持服务</td></tr><tr><td>lottery-common</td><td>定义通用数据，比如统一响应数据、常量、异常、枚举等</td></tr><tr><td>lottery-domain</td><td>领域层，核心业务逻辑</td></tr><tr><td>lottery-infrastructure</td><td>基础层，为其他各层提供通用技术能力，包括数据库、Redis、ES 等</td></tr><tr><td>lottery-interfaces</td><td>用户接口层，存放与前端交互、展现数据相关的代码</td></tr><tr><td>lottery-rpc</td><td>RPC 接口文件</td></tr></tbody></table></li><li><p>跑通 RPC</p><ol><li>定义 response 状态码枚举供通用返回对象 Result 进行使用</li><li>定义通用返回对象 Result 类</li><li>定义 activity 表的持久化对象</li><li>定义 activity 表的 Mapper 接口</li><li>定义 mybatis 配置文件</li><li>定义 activity 表的 mapper.xml 文件</li><li>定义 rpc 的数据传输对象(DTO) ActivityDto</li><li>定义 rpc 的 请求对象 ActivityReq</li><li>定义 rpc 的响应对象 ActivityRes</li><li>定义 rpc 接口 IActivityBooth</li><li>实现 IActivityBooth 接口</li><li>编写启动类</li><li>编写配置文件 application.yml</li><li>编写测试模块</li></ol></li></ol><h2 id="遇到的问题" tabindex="-1"><a class="header-anchor" href="#遇到的问题"><span>遇到的问题</span></a></h2><ol><li><p>数据库乱码问题</p><p>测试模块 RPC 远程调用返回的结果为:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">测试结果：{</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;activity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:{</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;activityDesc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;?????????&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;activityId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100002</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;activityName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;????&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;beginDateTime&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1705215282000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;endDateTime&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1705215282000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;stockCount&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;takeCount&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">},</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;result&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:{</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;0000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;info&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;成功&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>明显的乱码问题，查看数据库，发现插入的时候就以及乱码了，看了一下配置文件中的数据库连接 url，发现使用了 useUnicode=true，并没有指定字符集，所以添加一下 utf-8 字符集即可，完整 url: <code>jdbc:mysql://127.0.0.1:3306/lottery?useUnicode=true&amp;characterEncoding=UTF-8</code></p><p>再进行一轮测试，测试结果：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">测试结果：{</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;activity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:{</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;activityDesc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;仅用于插入数据测试&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;activityId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100003</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;activityName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;测试活动&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;beginDateTime&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1705218054000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;endDateTime&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1705218054000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;stockCount&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;takeCount&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">},</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;result&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:{</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;0000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">&quot;info&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;成功&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>解决！</p></li><li><p>MySql 5.x 换 8.x<br> maven改为：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">     &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;mysql&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">     &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;mysql-connector-java&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">     &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;8.0.22&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>application.yml改为：</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">   datasource</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      driver-class-name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">com.mysql.cj.jdbc.Driver</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><ol><li><h4 id="贫血模型和充血模型" tabindex="-1"><a class="header-anchor" href="#贫血模型和充血模型"><span>贫血模型和充血模型</span></a></h4><p>贫血模型是指实体类只包含数据，不包含业务逻辑，充血模型是实体类同时包含数据以及业务逻辑。<br> 贫血模型的对象在设计之初就被定义为只能包含数据，不能加入领域逻辑；逻辑要全部写入Service中；而Service则构建在领域模型之上，需要使用这些贫血模型来传递数据。而这与面向对象设计“背道而驰”；“一个对象是拥有状态和行为的”。<br> 充血模型也被称为领域模型，将业务逻辑和数据结构紧密耦合在一起，把业务逻辑集成到实体中。这种模型强调在问题领域构建模型（DDD中有<strong>事件风暴</strong>和<strong>界限上下文</strong>等概念），并把问题领域的知识嵌入到代码中。它将业务逻辑和数据操作封装到实体中，实体包含了数据和操作数据的业务逻辑，以及实体之间的关系。</p></li><li><h4 id="关于-po、vo、do、dto" tabindex="-1"><a class="header-anchor" href="#关于-po、vo、do、dto"><span>关于 PO、VO、DO、DTO</span></a></h4><blockquote><p>PO：persistent object 持久对象</p></blockquote><ul><li>有时也被称为Data对象，对应数据库中的entity，可以简单认为一个PO对应数据库中的一条记录。</li><li>在Mybatis持久化框架中与insert/delet操作密切相关。</li><li>PO中不应该包含任何对数据库的操作。</li></ul><blockquote><p>POJO ：plain ordinary java object 无规则简单java对象<br> VO：value object 值对象 / view object 表现层对象</p></blockquote><ul><li>主要对应页面显示（web页面/swt、swing界面）的数据对象。</li><li>可以和表对应，也可以不，这根据业务的需要。</li><li>可以细分包括 req、res</li></ul><blockquote><p>DO（Domain Object）：领域对象，</p></blockquote><ul><li>就是从现实世界中抽象出来的有形或无形的业务实体。通常可以代替部分 PO 的职责。</li></ul><blockquote><p>DTO（TO）：Data Transfer Object 数据传输对象</p></blockquote><ul><li>用在需要跨进程或远程传输时，它不应该包含业务逻辑。</li><li>比如一张表有100个字段，那么对应的PO就有100个属性（大多数情况下，DTO内的数据来自多个表）。但view层只需显示10个字段，没有必要把整个PO对象传递到client，这时我们就可以用只有这10个属性的DTO来传输数据到client，这样也不会暴露server端表结构。到达客户端以后，如果用这个对象来对应界面显示，那此时它的身份就转为VO。</li></ul></li><li><h4 id="为什么ddd" tabindex="-1"><a class="header-anchor" href="#为什么ddd"><span>为什么DDD</span></a></h4><p>我发现在之前的开发中，经常出现新增功能就需要修改旧的对象或者是直接新增，非常麻烦且能够预见到以后项目继续发展的话这种情况会更严重，而DDD通过提前的领域建模和对模型界限上下文的划定可以在一定程度上减少这种问题。话是这么说不错但是实际上自己尝试用DDD重构以前mvc的项目时还是觉得很难落实，根据业务划分领域和上下文界限时无从下手。多看多学！🤕</p></li></ol>`,8),n=[l];function h(k,p){return t(),s("div",null,n)}const o=i(e,[["render",h],["__file","Note01.html.vue"]]),c=JSON.parse('{"path":"/md/dev-log/Note01.html","title":"Note01","lang":"zh-CN","frontmatter":{"title":"Note01","index":false,"icon":"laptop-code","category":["开发笔记","学习记录"],"description":"任务 [x] 环境配置 [x] 搭建项目结构 [x] 跑通广播模式 RPC 过程调用 学习过程 项目整体了解 通过对第一节文档的阅读，了解整个项目的生命周期、所需要的技术以及代码提交规范 搭建项目结构，简单学习DDD架构，理解每个模块的依赖关系和作用 依赖关系图依赖关系图 跑通 RPC 定义 response 状态码枚举供通用返回对象 Result 进...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/md/dev-log/Note01.html"}],["meta",{"property":"og:site_name","content":"PUPPET1og"}],["meta",{"property":"og:title","content":"Note01"}],["meta",{"property":"og:description","content":"任务 [x] 环境配置 [x] 搭建项目结构 [x] 跑通广播模式 RPC 过程调用 学习过程 项目整体了解 通过对第一节文档的阅读，了解整个项目的生命周期、所需要的技术以及代码提交规范 搭建项目结构，简单学习DDD架构，理解每个模块的依赖关系和作用 依赖关系图依赖关系图 跑通 RPC 定义 response 状态码枚举供通用返回对象 Result 进..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://ossk.cc/file/a1becec060599d420b82d.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-12T18:11:26.000Z"}],["meta",{"property":"article:author","content":"PUPPET17"}],["meta",{"property":"article:modified_time","content":"2024-07-12T18:11:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Note01\\",\\"image\\":[\\"https://ossk.cc/file/a1becec060599d420b82d.png\\"],\\"dateModified\\":\\"2024-07-12T18:11:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"PUPPET17\\",\\"url\\":\\"www.puppet17.fun\\"}]}"]]},"headers":[{"level":2,"title":"任务","slug":"任务","link":"#任务","children":[]},{"level":2,"title":"学习过程","slug":"学习过程","link":"#学习过程","children":[]},{"level":2,"title":"遇到的问题","slug":"遇到的问题","link":"#遇到的问题","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1720608859000,"updatedTime":1720807886000,"contributors":[{"name":"PUPPET17","email":"hero768bnfv@gmail.com","commits":7}]},"readingTime":{"minutes":4.71,"words":1413},"filePathRelative":"md/dev-log/Note01.md","localizedDate":"2024年7月10日","autoDesc":true}');export{o as comp,c as data};
